name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    # 安装系统依赖
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg libmagic1
    
    # 设置CPU测试环境变量
    - name: Set CPU test environment
      run: |
        echo "FORCE_CPU=True" >> $GITHUB_ENV
        echo "USE_QDRANT_MOCK=1" >> $GITHUB_ENV
        echo "OPENCV_IO_ENABLE_OPENEXR=1" >> $GITHUB_ENV
        echo "PYTHONUNBUFFERED=1" >> $GITHUB_ENV
        echo "QT_QPA_PLATFORM=offscreen" >> $GITHUB_ENV
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # 优先安装OpenCV headless版本，避免GUI依赖
        pip install opencv-python-headless
        # 使用CI专用依赖文件
        if [ -f requirements-ci.txt ]; then 
          pip install -r requirements-ci.txt; 
        else
          pip install -r requirements.txt
        fi
        pip install pytest pytest-cov
    
    # 验证关键组件安装
    - name: Verify installations
      run: |
        python -c "import cv2; print(f'OpenCV version: {cv2.__version__}')"
        python -c "import torch; print(f'PyTorch version: {torch.__version__}')"
    
    - name: Run tests with pytest
      run: |
        # 使用CPU测试配置文件
        export TEST_CONFIG_FILE=tests/configs/ci_test_config.yml
        pytest tests/unit/ -v --cov=src --cov-report=xml --cov-report=term-missing --tb=short
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella